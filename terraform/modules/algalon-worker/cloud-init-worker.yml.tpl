#cloud-config
# Algalon Worker Cloud Init Configuration
# Generated by Terraform for worker node setup

write_files:
  - path: /tmp/algalon-setup.sh
    permissions: 0755
    content: |
      #!/bin/bash
      set -e

      # Colors for output
      RED='\033[0;31m'
      GREEN='\033[0;32m'
      YELLOW='\033[1;33m'
      BLUE='\033[0;34m'
      NC='\033[0m'

      log() {
          echo -e "$${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')] $1$${NC}"
      }

      error() {
          echo -e "$${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1$${NC}" >&2
      }

      success() {
          echo -e "$${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1$${NC}"
      }

      # Setup Docker Compose
      setup_docker_compose() {
          log "Installing Docker Compose..."

          # Download latest docker-compose
          COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4)
          curl -L "https://github.com/docker/compose/releases/download/$${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" \
               -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

          # Create symlink for 'docker compose' subcommand
          mkdir -p ~/.docker/cli-plugins/
          ln -sf /usr/local/bin/docker-compose ~/.docker/cli-plugins/docker-compose

          success "Docker Compose installed: $(/usr/local/bin/docker-compose --version)"
      }

      # Setup Algalon Worker
      setup_algalon_worker() {
          log "Setting up Algalon Worker (Hardware Metrics)..."

          # Configuration from Terraform
          local version="${all_smi_version}"
          local port="${all_smi_port}"
          local interval="${all_smi_interval}"

          log "Worker configuration:"
          log "  Version: $version"
          log "  Port: $port"
          log "  Interval: $${interval}s"

          # Clone repository
          cd /opt
          git clone https://github.com/inureyes/Algalon.git
          cd Algalon/algalon_worker

          # Setup worker
          ./setup.sh --version "$version" --port "$port" --interval "$interval"

          success "Algalon Worker setup complete!"

          # Get external IP for metrics URL
          EXTERNAL_IP=$(curl -s http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip -H 'Metadata-Flavor: Google' 2>/dev/null || echo "localhost")
          success "Metrics endpoint: http://$${EXTERNAL_IP}:$port/metrics"
      }

      # Main setup function
      main() {
          log "Starting Algalon Worker Setup..."

          # Install Docker Compose
          setup_docker_compose

          # Setup worker
          setup_algalon_worker

          success "Algalon Worker setup completed successfully!"
      }

      # Run main function
      main "$@"

runcmd:
  # Wait for Docker to be ready
  - timeout 300 bash -c 'until docker info; do sleep 5; done'

  # Run Algalon setup
  - /tmp/algalon-setup.sh 2>&1 | tee /var/log/algalon-setup.log

# Configure systemd service for monitoring setup logs
write_files:
  - path: /tmp/setup-complete-check.sh
    permissions: 0755
    content: |
      #!/bin/bash
      # Check setup completion and log status

      check_services() {
          echo "=== Algalon Worker Service Status ==="
          echo "Setup log location: /var/log/algalon-setup.log"
          echo ""

          echo "Docker containers:"
          docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
          echo ""

          echo "Service endpoints:"
          EXTERNAL_IP=$(curl -s http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip -H 'Metadata-Flavor: Google' 2>/dev/null || echo "localhost")
          echo "External IP: $EXTERNAL_IP"
          echo ""

          if docker ps | grep -q algalon-all-smi; then
              local port=$(docker ps --filter name=algalon-all-smi --format "{{.Ports}}" | grep -o '[0-9]*:${all_smi_port}' | cut -d: -f1)
              echo "ðŸ“Š Metrics Endpoint: http://$EXTERNAL_IP:$${port:-${all_smi_port}}/metrics"
          fi

          echo ""
          echo "To view setup logs: sudo journalctl -u google-startup-scripts.service"
          echo "To view live setup progress: tail -f /var/log/algalon-setup.log"
      }

      # Wait a bit for services to settle, then check
      sleep 60
      check_services

# Enable monitoring and start status check
runcmd:
  - nohup /tmp/setup-complete-check.sh > /var/log/algalon-status.log 2>&1 &