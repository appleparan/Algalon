#cloud-config
# Algalon Host Cloud Init Configuration
# Generated by Terraform for monitoring host setup

write_files:
  - path: /tmp/algalon-setup.sh
    permissions: 0755
    content: |
      #!/bin/bash
      set -e

      # Colors for output
      RED='\033[0;31m'
      GREEN='\033[0;32m'
      YELLOW='\033[1;33m'
      BLUE='\033[0;34m'
      NC='\033[0m'

      log() {
          echo -e "$${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')] $1$${NC}"
      }

      error() {
          echo -e "$${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1$${NC}" >&2
      }

      success() {
          echo -e "$${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1$${NC}"
      }

      # Setup Docker Compose
      setup_docker_compose() {
          log "Installing Docker Compose..."

          # Download latest docker-compose
          COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4)
          curl -L "https://github.com/docker/compose/releases/download/$${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" \
               -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

          # Create symlink for 'docker compose' subcommand
          mkdir -p ~/.docker/cli-plugins/
          ln -sf /usr/local/bin/docker-compose ~/.docker/cli-plugins/docker-compose

          success "Docker Compose installed: $(/usr/local/bin/docker-compose --version)"
      }

      # Setup Algalon Host
      setup_algalon_host() {
          log "Setting up Algalon Host (Monitoring)..."

          # Configuration from Terraform
          local targets="${algalon_targets}"
          local cluster="${algalon_cluster}"
          local environment="${algalon_environment}"

          log "Host configuration:"
          log "  Targets: $targets"
          log "  Cluster: $cluster"
          log "  Environment: $environment"

          # Clone repository
          cd /opt
          git clone https://github.com/appleparan/Algalon.git
          cd Algalon/algalon_host

          # Generate targets configuration
          export ALGALON_TARGETS="$targets"
          export ALGALON_CLUSTER="$cluster"
          export ALGALON_ENVIRONMENT="$environment"

          log "Generating targets configuration..."
          ./generate-targets.sh

          # Start monitoring services
          log "Starting monitoring services..."
          /usr/local/bin/docker-compose up -d

          # Wait for services
          log "Waiting for services to start..."
          sleep 30

          success "Algalon Host setup complete!"

          # Get external IP for dashboard URL
          EXTERNAL_IP=$(curl -s http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip -H 'Metadata-Flavor: Google' 2>/dev/null || echo "localhost")
          success "Grafana Dashboard: http://$${EXTERNAL_IP}:3000"
          success "Username: admin, Password: admin"
      }

      # Main setup function
      main() {
          log "Starting Algalon Host Setup..."

          # Install Docker Compose
          setup_docker_compose

          # Setup monitoring host
          setup_algalon_host

          success "Algalon Host setup completed successfully!"
      }

      # Run main function
      main "$@"

runcmd:
  # Wait for Docker to be ready
  - timeout 300 bash -c 'until docker info; do sleep 5; done'

  # Run Algalon setup
  - /tmp/algalon-setup.sh 2>&1 | tee /var/log/algalon-setup.log

# Configure systemd service for monitoring setup logs
write_files:
  - path: /tmp/setup-complete-check.sh
    permissions: 0755
    content: |
      #!/bin/bash
      # Check setup completion and log status

      check_services() {
          echo "=== Algalon Host Service Status ==="
          echo "Setup log location: /var/log/algalon-setup.log"
          echo ""

          echo "Docker containers:"
          docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
          echo ""

          echo "Service endpoints:"
          EXTERNAL_IP=$(curl -s http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip -H 'Metadata-Flavor: Google' 2>/dev/null || echo "localhost")
          echo "External IP: $EXTERNAL_IP"
          echo ""

          if docker ps | grep -q grafana; then
              echo "ðŸŽ¯ Grafana Dashboard: http://$EXTERNAL_IP:3000"
              echo "   Username: admin"
              echo "   Password: admin"
          fi

          if docker ps | grep -q victoria; then
              echo "ðŸ“Š VictoriaMetrics: http://$EXTERNAL_IP:8428"
          fi

          echo ""
          echo "To view setup logs: sudo journalctl -u google-startup-scripts.service"
          echo "To view live setup progress: tail -f /var/log/algalon-setup.log"
      }

      # Wait a bit for services to settle, then check
      sleep 60
      check_services

# Enable monitoring and start status check
runcmd:
  - nohup /tmp/setup-complete-check.sh > /var/log/algalon-status.log 2>&1 &